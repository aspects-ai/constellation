version: '3.8'

services:
  # Remote filesystem backend (SSH server)
  constellation-fs-backend:
    build:
      context: ..
      dockerfile: docker/backend/Dockerfile
    container_name: constellation-fs-backend
    hostname: constellation-fs-backend
    networks:
      constellation-net:
        ipv4_address: 172.20.0.10
    ports:
      - "2222:22"
    volumes:
      - constellation-workspace:/workspace
    environment:
      - SSH_USER=root
      - SSH_PASSWORD=constellation
    healthcheck:
      test: ["CMD", "pgrep", "sshd"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  # Development environment (web demo with LD_PRELOAD)
  constellation-fs-devenv:
    build:
      context: ..
      dockerfile: docker/devenv/Dockerfile
    container_name: constellation-fs-devenv
    hostname: constellation-fs-devenv
    networks:
      constellation-net:
        ipv4_address: 172.20.0.20
    ports:
      - "3000:3000"
    volumes:
      # Bind mount for live development
      - ../examples/web-demo:/app:rw
      # Shared workspace with backend
      - constellation-workspace:/workspace
      # Mount the built ConstellationFS library and source
      - ../:/constellation-fs:ro
    environment:
      - NODE_ENV=development
      - REMOTE_VM_HOST=constellation-fs-backend
      - REMOTE_VM_PORT=2222
      - CONSTELLATION_CWD=/workspace
      - CONSTELLATION_DEBUG=1
    depends_on:
      constellation-fs-backend:
        condition: service_healthy
    restart: unless-stopped
    stdin_open: true
    tty: true

networks:
  constellation-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  constellation-workspace:
    driver: local